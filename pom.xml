<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>Jasmine Parent</name>
    <groupId>com.magicodex</groupId>
    <artifactId>jasmine-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.2.0</version>

    <description>Jasmine, Java web framework.</description>
    <url>https://github.com/magicodex/MoLiHua/wiki</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>mh.z</name>
            <email>zhuangmaohui@163.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git://github.com/magicodex/MoLiHua.git</connection>
        <developerConnection>scm:git:ssh://github.com:magicodex/MoLiHua.git</developerConnection>
        <url>https://github.com/magicodex/MoLiHua/tree/main</url>
    </scm>

    <modules>
        <module>jasmine-bom</module>
        <module>jasmine-core</module>
        <module>jasmine-core-test</module>
        <module>jasmine-framework</module>
        <module>jasmine-framework-test</module>
        <module>jasmine-security</module>
        <module>jasmine-security-test</module>
        <module>jasmine-spring-boot-autoconfigure</module>
        <module>jasmine-spring-boot-starter</module>
        <module>jasmine-spring-boot-starter-security</module>
        <module>jasmine-spring-cloud-stream</module>
        <module>jasmine-demo</module>
        <module>jasmine-jacoco-report-aggregate</module>
    </modules>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <!-- 部署到Maven仓库，示例 mvn deploy -DmavenCenter=true -->
        <profile>
            <id>deployToMavenCenter</id>
            <activation>
                <property>
                    <name>mavenCenter</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- 部署插件 -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus-staging-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <!-- END 部署插件 -->
                    <!-- 源码插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven-source-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- END 源码插件 -->
                    <!-- 文档插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <doclint>none</doclint>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- END 文档插件 -->
                    <!-- 签名插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- END 签名插件 -->
                </plugins>
            </build>
        </profile>

        <!-- 统计代码测试覆盖率，示例 mvn test -DcoverageReport=true -->
        <profile>
            <id>runAllTestsWithCoverage</id>
            <activation>
                <property>
                    <name>coverageReport</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- 代码覆盖率统计插件 -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>jacoco-agent</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                    <goal>report-aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- END 代码覆盖率统计插件 -->
                </plugins>
            </build>
        </profile>
    </profiles>

</project>